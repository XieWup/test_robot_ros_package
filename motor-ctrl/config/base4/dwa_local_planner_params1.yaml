DWAPlannerROS:
  # Robot Configuration Parameters - mengbao
  max_vel_x: 3.5  #x方向最大线速度绝对值，单位:米/秒
  min_vel_x: -0.2 #x方向最小线速度绝对值，单位:米/秒。如果为负值表示可以后退

  max_vel_y: 0.0  # diff drive robot #y方向最大线速度绝对值，单位:米/秒。turtlebot为差分驱动机器人，所以为0
  min_vel_y: 0.0  # diff drive robot

  max_trans_vel: 3.5 #1.0 #0.8 #机器人最大平移速度的绝对值，单位为 m/s  #max_vel_trans 下同
  min_trans_vel: 0.1 #0.02 #0.1  #机器人最小平移速度的绝对值，单位为 m/s 

#  max_vel_theta: 3.0 
#  min_vel_theta: 0.4 #0.01

  trans_stopped_vel: 0.1 #0.05

  # Warning!
  #   do not set min_trans_vel to 0.0 otherwise dwa will always think translational velocities
  #   are non-negligible and small in place rotational velocities will be created.

  max_rot_vel: 3.0  # choose slightly less than the base's capability  #机器人的最大旋转角速度的绝对值，单位为 rad/s
  min_rot_vel: -1.0 #0.2 -0.4 #机器人的最小旋转角速度的绝对值，单位为 rad/s 负数表示可全向旋转
  rot_stopped_vel: 0.1 #0.01 #0.2 #机器人被认属于“停止”状态时的旋转速度。单位为 rad/s
  
  acc_lim_x: 5.0 #1.2 #1.5 #aximum is theoretically 2.0, but we 0.5  2.0 机器人在x方向的极限加速度，单位为 meters/sec^2
  acc_lim_theta: 2.0 #4.0 #6.0 #4.7 #2.0 #6.0 机器人的极限旋转加速度，单位为 rad/sec^2
  acc_lim_y: 0.0     # diff drive robot 机器人在y方向的极限加速度，对于差分机器人来说当然是0
 
# Goal Tolerance Parameters
  yaw_goal_tolerance: 0.2 #0.1  # 0.05 到达目标点时，控制器在偏航/旋转时的弧度容差(tolerance)允许机器人缩到目标的方向（弧度）偏差，该值设置小可能导致机器人接近目标振荡。默认为0.1。
  xy_goal_tolerance: 0.2  # 0.10 到目标点时，控制器在x和y方向上的容差（tolerence）（米）。即：到达目标点时,在xy平面内与目标点的距离误差，该值过小可能导致机器人在目标位置附近不断调整到精确的目标位置。默认为0.1。
#  latch_xy_goal_tolerance: true  #true #目标坐标偏差锁存，如果上锁，机器人到达过坐标后只进行简单的方向调整，即使在公差外。默认为false。

# Forward Simulation Parameters
  sim_time: 1.0       #前向模拟轨迹的时间，单位为s
  dwa: true           #用DWA模拟未来的轨迹
  vx_samples: 10      # x方向速度空间的采样点数 10
  vy_samples: 1       # y方向速度空间采样点数.。Tutulebot为差分驱动机器人，所以y方向永远只有1个值（0.0）
  vtheta_samples: 20  # 旋转方向的速度空间采样点数

#  controller_frequency: 20.0  #向底盘发布消息的频率 发布频率降低时可以提升机器人的行驶速度，但程序对于机器人的控制能力就降低了（特别体现在过弯），酌情调整

# Trajectory Scoring Parameters
  pdist_scale: 0.8 #全局的比例0.8
  gdist_scale: 0.4 #全局和局部的比例0.4

  path_distance_bias: 32.0      # 32.0   - 控制器与给定路径接近程度的权重
  goal_distance_bias: 24.0      # 24.0   - 控制器与局部目标点的接近程度的权重，也用于速度控制
  occdist_scale: 0.02            # 0.01   - 控制器躲避障碍物的程度
  forward_point_distance: 0.325 # 0.325  - 以机器人为中心，额外放置一个计分点的距离t
  stop_time_buffer: 0.2         # 0.2    - 机器人在碰撞发生前必须拥有的最少时间量。该时间内所采用的轨迹仍视为有效。即：为防止碰撞,机器人必须提前停止的时间长度
  scaling_speed: 0.25           # 0.25   - absolute velocity at which to start scaling the robot's footprint
  #开始缩放机器人足迹时的速度的绝对值，单位为m/s。
  #在进行对轨迹各个点计算footprintCost之前，会先计算缩放因子。如果当前平移速度小于scaling_speed，则缩放因子为1.0，否则，缩放因子为(vmag - scaling_speed) / (max_trans_vel - scaling_speed) * max_scaling_factor + 1.0。然后，该缩放因子会被用于计算轨迹中各个点的footprintCost。
  # 参考：https://www.cnblogs.com/sakabatou/p/8297479.html


  max_scaling_factor: 0.2       # 0.2    - 最大缩放因子。max_scaling_factor为上式的值的大小.

# Oscillation Prevention Parameters
#  # Oscilation reset: true  机器人必须运动多少米远后才能复位震荡标记(机器人运动多远距离才会重置振荡标记)
#为什么注释掉：在通过门口的情况下，机器人可能会来回振荡，是因为本地规划器正在产生通过两个相反方向的路径。如果机器人保持振荡，导航堆栈将让机器人尝试恢复行为
  oscillation_reset_dist: 0.05  # 0.05   - how far to travel before resetting oscillation flags

# Debugging
  publish_traj_pc : true #将规划的轨迹在RVIZ上进行可视化
  publish_cost_grid_pc: true
  #将代价值进行可视化显示
  #是否发布规划器在规划路径时的代价网格.如果设置为true,那么就会在~/cost_cloud话题上发布sensor_msgs/PointCloud2类型消息
  global_frame_id: t265_odom  #全局参考坐标系为odom


# Differential-drive robot configuration - necessary?
#  holonomic_robot: false  # 全方向机器人。对于两轮差速，该值为false。


